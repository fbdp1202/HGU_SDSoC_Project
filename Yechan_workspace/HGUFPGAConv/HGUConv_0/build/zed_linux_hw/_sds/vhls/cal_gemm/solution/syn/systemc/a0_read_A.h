// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _a0_read_A_HH_
#define _a0_read_A_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct a0_read_A : public sc_module {
    // Port declarations 138
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > A_dout;
    sc_in< sc_logic > A_empty_n;
    sc_out< sc_logic > A_read;
    sc_out< sc_lv<8> > la_0_address0;
    sc_out< sc_logic > la_0_ce0;
    sc_out< sc_logic > la_0_we0;
    sc_out< sc_lv<32> > la_0_d0;
    sc_out< sc_lv<8> > la_1_address0;
    sc_out< sc_logic > la_1_ce0;
    sc_out< sc_logic > la_1_we0;
    sc_out< sc_lv<32> > la_1_d0;
    sc_out< sc_lv<8> > la_2_address0;
    sc_out< sc_logic > la_2_ce0;
    sc_out< sc_logic > la_2_we0;
    sc_out< sc_lv<32> > la_2_d0;
    sc_out< sc_lv<8> > la_3_address0;
    sc_out< sc_logic > la_3_ce0;
    sc_out< sc_logic > la_3_we0;
    sc_out< sc_lv<32> > la_3_d0;
    sc_out< sc_lv<8> > la_4_address0;
    sc_out< sc_logic > la_4_ce0;
    sc_out< sc_logic > la_4_we0;
    sc_out< sc_lv<32> > la_4_d0;
    sc_out< sc_lv<8> > la_5_address0;
    sc_out< sc_logic > la_5_ce0;
    sc_out< sc_logic > la_5_we0;
    sc_out< sc_lv<32> > la_5_d0;
    sc_out< sc_lv<8> > la_6_address0;
    sc_out< sc_logic > la_6_ce0;
    sc_out< sc_logic > la_6_we0;
    sc_out< sc_lv<32> > la_6_d0;
    sc_out< sc_lv<8> > la_7_address0;
    sc_out< sc_logic > la_7_ce0;
    sc_out< sc_logic > la_7_we0;
    sc_out< sc_lv<32> > la_7_d0;
    sc_out< sc_lv<8> > la_8_address0;
    sc_out< sc_logic > la_8_ce0;
    sc_out< sc_logic > la_8_we0;
    sc_out< sc_lv<32> > la_8_d0;
    sc_out< sc_lv<8> > la_9_address0;
    sc_out< sc_logic > la_9_ce0;
    sc_out< sc_logic > la_9_we0;
    sc_out< sc_lv<32> > la_9_d0;
    sc_out< sc_lv<8> > la_10_address0;
    sc_out< sc_logic > la_10_ce0;
    sc_out< sc_logic > la_10_we0;
    sc_out< sc_lv<32> > la_10_d0;
    sc_out< sc_lv<8> > la_11_address0;
    sc_out< sc_logic > la_11_ce0;
    sc_out< sc_logic > la_11_we0;
    sc_out< sc_lv<32> > la_11_d0;
    sc_out< sc_lv<8> > la_12_address0;
    sc_out< sc_logic > la_12_ce0;
    sc_out< sc_logic > la_12_we0;
    sc_out< sc_lv<32> > la_12_d0;
    sc_out< sc_lv<8> > la_13_address0;
    sc_out< sc_logic > la_13_ce0;
    sc_out< sc_logic > la_13_we0;
    sc_out< sc_lv<32> > la_13_d0;
    sc_out< sc_lv<8> > la_14_address0;
    sc_out< sc_logic > la_14_ce0;
    sc_out< sc_logic > la_14_we0;
    sc_out< sc_lv<32> > la_14_d0;
    sc_out< sc_lv<8> > la_15_address0;
    sc_out< sc_logic > la_15_ce0;
    sc_out< sc_logic > la_15_we0;
    sc_out< sc_lv<32> > la_15_d0;
    sc_out< sc_lv<8> > la_16_address0;
    sc_out< sc_logic > la_16_ce0;
    sc_out< sc_logic > la_16_we0;
    sc_out< sc_lv<32> > la_16_d0;
    sc_out< sc_lv<8> > la_17_address0;
    sc_out< sc_logic > la_17_ce0;
    sc_out< sc_logic > la_17_we0;
    sc_out< sc_lv<32> > la_17_d0;
    sc_out< sc_lv<8> > la_18_address0;
    sc_out< sc_logic > la_18_ce0;
    sc_out< sc_logic > la_18_we0;
    sc_out< sc_lv<32> > la_18_d0;
    sc_out< sc_lv<8> > la_19_address0;
    sc_out< sc_logic > la_19_ce0;
    sc_out< sc_logic > la_19_we0;
    sc_out< sc_lv<32> > la_19_d0;
    sc_out< sc_lv<8> > la_20_address0;
    sc_out< sc_logic > la_20_ce0;
    sc_out< sc_logic > la_20_we0;
    sc_out< sc_lv<32> > la_20_d0;
    sc_out< sc_lv<8> > la_21_address0;
    sc_out< sc_logic > la_21_ce0;
    sc_out< sc_logic > la_21_we0;
    sc_out< sc_lv<32> > la_21_d0;
    sc_out< sc_lv<8> > la_22_address0;
    sc_out< sc_logic > la_22_ce0;
    sc_out< sc_logic > la_22_we0;
    sc_out< sc_lv<32> > la_22_d0;
    sc_out< sc_lv<8> > la_23_address0;
    sc_out< sc_logic > la_23_ce0;
    sc_out< sc_logic > la_23_we0;
    sc_out< sc_lv<32> > la_23_d0;
    sc_out< sc_lv<8> > la_24_address0;
    sc_out< sc_logic > la_24_ce0;
    sc_out< sc_logic > la_24_we0;
    sc_out< sc_lv<32> > la_24_d0;
    sc_out< sc_lv<8> > la_25_address0;
    sc_out< sc_logic > la_25_ce0;
    sc_out< sc_logic > la_25_we0;
    sc_out< sc_lv<32> > la_25_d0;
    sc_out< sc_lv<8> > la_26_address0;
    sc_out< sc_logic > la_26_ce0;
    sc_out< sc_logic > la_26_we0;
    sc_out< sc_lv<32> > la_26_d0;
    sc_out< sc_lv<8> > la_27_address0;
    sc_out< sc_logic > la_27_ce0;
    sc_out< sc_logic > la_27_we0;
    sc_out< sc_lv<32> > la_27_d0;
    sc_out< sc_lv<8> > la_28_address0;
    sc_out< sc_logic > la_28_ce0;
    sc_out< sc_logic > la_28_we0;
    sc_out< sc_lv<32> > la_28_d0;
    sc_out< sc_lv<8> > la_29_address0;
    sc_out< sc_logic > la_29_ce0;
    sc_out< sc_logic > la_29_we0;
    sc_out< sc_lv<32> > la_29_d0;
    sc_out< sc_lv<8> > la_30_address0;
    sc_out< sc_logic > la_30_ce0;
    sc_out< sc_logic > la_30_we0;
    sc_out< sc_lv<32> > la_30_d0;
    sc_out< sc_lv<8> > la_31_address0;
    sc_out< sc_logic > la_31_ce0;
    sc_out< sc_logic > la_31_we0;
    sc_out< sc_lv<32> > la_31_d0;


    // Module declarations
    a0_read_A(sc_module_name name);
    SC_HAS_PROCESS(a0_read_A);

    ~a0_read_A();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > A_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_738;
    sc_signal< sc_lv<13> > indvar_flatten_reg_620;
    sc_signal< sc_lv<6> > i_reg_631;
    sc_signal< sc_lv<8> > j_reg_642;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_653_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<13> > indvar_flatten_next_fu_659_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<8> > j_mid2_fu_671_p3;
    sc_signal< sc_lv<8> > j_mid2_reg_747;
    sc_signal< sc_lv<6> > i_t_mid2_v_fu_685_p3;
    sc_signal< sc_lv<6> > i_t_mid2_v_reg_752;
    sc_signal< sc_lv<5> > tmp_fu_693_p1;
    sc_signal< sc_lv<5> > tmp_reg_757;
    sc_signal< sc_lv<8> > j_1_fu_697_p2;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<6> > ap_phi_mux_i_phi_fu_635_p4;
    sc_signal< sc_lv<32> > j_cast1_fu_703_p1;
    sc_signal< sc_lv<1> > exitcond_fu_665_p2;
    sc_signal< sc_lv<6> > i_s_fu_679_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1D;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1B;
    static const sc_lv<5> ap_const_lv5_1A;
    static const sc_lv<5> ap_const_lv5_19;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_17;
    static const sc_lv<5> ap_const_lv5_16;
    static const sc_lv<5> ap_const_lv5_15;
    static const sc_lv<5> ap_const_lv5_14;
    static const sc_lv<5> ap_const_lv5_13;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_B;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<5> ap_const_lv5_9;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<5> ap_const_lv5_7;
    static const sc_lv<5> ap_const_lv5_6;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<13> ap_const_lv13_1200;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<8> ap_const_lv8_90;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_blk_n();
    void thread_A_read();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_phi_fu_635_p4();
    void thread_ap_ready();
    void thread_exitcond_flatten_fu_653_p2();
    void thread_exitcond_fu_665_p2();
    void thread_i_s_fu_679_p2();
    void thread_i_t_mid2_v_fu_685_p3();
    void thread_indvar_flatten_next_fu_659_p2();
    void thread_j_1_fu_697_p2();
    void thread_j_cast1_fu_703_p1();
    void thread_j_mid2_fu_671_p3();
    void thread_la_0_address0();
    void thread_la_0_ce0();
    void thread_la_0_d0();
    void thread_la_0_we0();
    void thread_la_10_address0();
    void thread_la_10_ce0();
    void thread_la_10_d0();
    void thread_la_10_we0();
    void thread_la_11_address0();
    void thread_la_11_ce0();
    void thread_la_11_d0();
    void thread_la_11_we0();
    void thread_la_12_address0();
    void thread_la_12_ce0();
    void thread_la_12_d0();
    void thread_la_12_we0();
    void thread_la_13_address0();
    void thread_la_13_ce0();
    void thread_la_13_d0();
    void thread_la_13_we0();
    void thread_la_14_address0();
    void thread_la_14_ce0();
    void thread_la_14_d0();
    void thread_la_14_we0();
    void thread_la_15_address0();
    void thread_la_15_ce0();
    void thread_la_15_d0();
    void thread_la_15_we0();
    void thread_la_16_address0();
    void thread_la_16_ce0();
    void thread_la_16_d0();
    void thread_la_16_we0();
    void thread_la_17_address0();
    void thread_la_17_ce0();
    void thread_la_17_d0();
    void thread_la_17_we0();
    void thread_la_18_address0();
    void thread_la_18_ce0();
    void thread_la_18_d0();
    void thread_la_18_we0();
    void thread_la_19_address0();
    void thread_la_19_ce0();
    void thread_la_19_d0();
    void thread_la_19_we0();
    void thread_la_1_address0();
    void thread_la_1_ce0();
    void thread_la_1_d0();
    void thread_la_1_we0();
    void thread_la_20_address0();
    void thread_la_20_ce0();
    void thread_la_20_d0();
    void thread_la_20_we0();
    void thread_la_21_address0();
    void thread_la_21_ce0();
    void thread_la_21_d0();
    void thread_la_21_we0();
    void thread_la_22_address0();
    void thread_la_22_ce0();
    void thread_la_22_d0();
    void thread_la_22_we0();
    void thread_la_23_address0();
    void thread_la_23_ce0();
    void thread_la_23_d0();
    void thread_la_23_we0();
    void thread_la_24_address0();
    void thread_la_24_ce0();
    void thread_la_24_d0();
    void thread_la_24_we0();
    void thread_la_25_address0();
    void thread_la_25_ce0();
    void thread_la_25_d0();
    void thread_la_25_we0();
    void thread_la_26_address0();
    void thread_la_26_ce0();
    void thread_la_26_d0();
    void thread_la_26_we0();
    void thread_la_27_address0();
    void thread_la_27_ce0();
    void thread_la_27_d0();
    void thread_la_27_we0();
    void thread_la_28_address0();
    void thread_la_28_ce0();
    void thread_la_28_d0();
    void thread_la_28_we0();
    void thread_la_29_address0();
    void thread_la_29_ce0();
    void thread_la_29_d0();
    void thread_la_29_we0();
    void thread_la_2_address0();
    void thread_la_2_ce0();
    void thread_la_2_d0();
    void thread_la_2_we0();
    void thread_la_30_address0();
    void thread_la_30_ce0();
    void thread_la_30_d0();
    void thread_la_30_we0();
    void thread_la_31_address0();
    void thread_la_31_ce0();
    void thread_la_31_d0();
    void thread_la_31_we0();
    void thread_la_3_address0();
    void thread_la_3_ce0();
    void thread_la_3_d0();
    void thread_la_3_we0();
    void thread_la_4_address0();
    void thread_la_4_ce0();
    void thread_la_4_d0();
    void thread_la_4_we0();
    void thread_la_5_address0();
    void thread_la_5_ce0();
    void thread_la_5_d0();
    void thread_la_5_we0();
    void thread_la_6_address0();
    void thread_la_6_ce0();
    void thread_la_6_d0();
    void thread_la_6_we0();
    void thread_la_7_address0();
    void thread_la_7_ce0();
    void thread_la_7_d0();
    void thread_la_7_we0();
    void thread_la_8_address0();
    void thread_la_8_ce0();
    void thread_la_8_d0();
    void thread_la_8_we0();
    void thread_la_9_address0();
    void thread_la_9_ce0();
    void thread_la_9_d0();
    void thread_la_9_we0();
    void thread_tmp_fu_693_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
