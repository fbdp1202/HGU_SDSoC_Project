// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _a0_out_initial_HH_
#define _a0_out_initial_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct a0_out_initial : public sc_module {
    // Port declarations 135
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > lout_0_address0;
    sc_out< sc_logic > lout_0_ce0;
    sc_out< sc_logic > lout_0_we0;
    sc_out< sc_lv<32> > lout_0_d0;
    sc_out< sc_lv<8> > lout_1_address0;
    sc_out< sc_logic > lout_1_ce0;
    sc_out< sc_logic > lout_1_we0;
    sc_out< sc_lv<32> > lout_1_d0;
    sc_out< sc_lv<8> > lout_2_address0;
    sc_out< sc_logic > lout_2_ce0;
    sc_out< sc_logic > lout_2_we0;
    sc_out< sc_lv<32> > lout_2_d0;
    sc_out< sc_lv<8> > lout_3_address0;
    sc_out< sc_logic > lout_3_ce0;
    sc_out< sc_logic > lout_3_we0;
    sc_out< sc_lv<32> > lout_3_d0;
    sc_out< sc_lv<8> > lout_4_address0;
    sc_out< sc_logic > lout_4_ce0;
    sc_out< sc_logic > lout_4_we0;
    sc_out< sc_lv<32> > lout_4_d0;
    sc_out< sc_lv<8> > lout_5_address0;
    sc_out< sc_logic > lout_5_ce0;
    sc_out< sc_logic > lout_5_we0;
    sc_out< sc_lv<32> > lout_5_d0;
    sc_out< sc_lv<8> > lout_6_address0;
    sc_out< sc_logic > lout_6_ce0;
    sc_out< sc_logic > lout_6_we0;
    sc_out< sc_lv<32> > lout_6_d0;
    sc_out< sc_lv<8> > lout_7_address0;
    sc_out< sc_logic > lout_7_ce0;
    sc_out< sc_logic > lout_7_we0;
    sc_out< sc_lv<32> > lout_7_d0;
    sc_out< sc_lv<8> > lout_8_address0;
    sc_out< sc_logic > lout_8_ce0;
    sc_out< sc_logic > lout_8_we0;
    sc_out< sc_lv<32> > lout_8_d0;
    sc_out< sc_lv<8> > lout_9_address0;
    sc_out< sc_logic > lout_9_ce0;
    sc_out< sc_logic > lout_9_we0;
    sc_out< sc_lv<32> > lout_9_d0;
    sc_out< sc_lv<8> > lout_10_address0;
    sc_out< sc_logic > lout_10_ce0;
    sc_out< sc_logic > lout_10_we0;
    sc_out< sc_lv<32> > lout_10_d0;
    sc_out< sc_lv<8> > lout_11_address0;
    sc_out< sc_logic > lout_11_ce0;
    sc_out< sc_logic > lout_11_we0;
    sc_out< sc_lv<32> > lout_11_d0;
    sc_out< sc_lv<8> > lout_12_address0;
    sc_out< sc_logic > lout_12_ce0;
    sc_out< sc_logic > lout_12_we0;
    sc_out< sc_lv<32> > lout_12_d0;
    sc_out< sc_lv<8> > lout_13_address0;
    sc_out< sc_logic > lout_13_ce0;
    sc_out< sc_logic > lout_13_we0;
    sc_out< sc_lv<32> > lout_13_d0;
    sc_out< sc_lv<8> > lout_14_address0;
    sc_out< sc_logic > lout_14_ce0;
    sc_out< sc_logic > lout_14_we0;
    sc_out< sc_lv<32> > lout_14_d0;
    sc_out< sc_lv<8> > lout_15_address0;
    sc_out< sc_logic > lout_15_ce0;
    sc_out< sc_logic > lout_15_we0;
    sc_out< sc_lv<32> > lout_15_d0;
    sc_out< sc_lv<8> > lout_16_address0;
    sc_out< sc_logic > lout_16_ce0;
    sc_out< sc_logic > lout_16_we0;
    sc_out< sc_lv<32> > lout_16_d0;
    sc_out< sc_lv<8> > lout_17_address0;
    sc_out< sc_logic > lout_17_ce0;
    sc_out< sc_logic > lout_17_we0;
    sc_out< sc_lv<32> > lout_17_d0;
    sc_out< sc_lv<8> > lout_18_address0;
    sc_out< sc_logic > lout_18_ce0;
    sc_out< sc_logic > lout_18_we0;
    sc_out< sc_lv<32> > lout_18_d0;
    sc_out< sc_lv<8> > lout_19_address0;
    sc_out< sc_logic > lout_19_ce0;
    sc_out< sc_logic > lout_19_we0;
    sc_out< sc_lv<32> > lout_19_d0;
    sc_out< sc_lv<8> > lout_20_address0;
    sc_out< sc_logic > lout_20_ce0;
    sc_out< sc_logic > lout_20_we0;
    sc_out< sc_lv<32> > lout_20_d0;
    sc_out< sc_lv<8> > lout_21_address0;
    sc_out< sc_logic > lout_21_ce0;
    sc_out< sc_logic > lout_21_we0;
    sc_out< sc_lv<32> > lout_21_d0;
    sc_out< sc_lv<8> > lout_22_address0;
    sc_out< sc_logic > lout_22_ce0;
    sc_out< sc_logic > lout_22_we0;
    sc_out< sc_lv<32> > lout_22_d0;
    sc_out< sc_lv<8> > lout_23_address0;
    sc_out< sc_logic > lout_23_ce0;
    sc_out< sc_logic > lout_23_we0;
    sc_out< sc_lv<32> > lout_23_d0;
    sc_out< sc_lv<8> > lout_24_address0;
    sc_out< sc_logic > lout_24_ce0;
    sc_out< sc_logic > lout_24_we0;
    sc_out< sc_lv<32> > lout_24_d0;
    sc_out< sc_lv<8> > lout_25_address0;
    sc_out< sc_logic > lout_25_ce0;
    sc_out< sc_logic > lout_25_we0;
    sc_out< sc_lv<32> > lout_25_d0;
    sc_out< sc_lv<8> > lout_26_address0;
    sc_out< sc_logic > lout_26_ce0;
    sc_out< sc_logic > lout_26_we0;
    sc_out< sc_lv<32> > lout_26_d0;
    sc_out< sc_lv<8> > lout_27_address0;
    sc_out< sc_logic > lout_27_ce0;
    sc_out< sc_logic > lout_27_we0;
    sc_out< sc_lv<32> > lout_27_d0;
    sc_out< sc_lv<8> > lout_28_address0;
    sc_out< sc_logic > lout_28_ce0;
    sc_out< sc_logic > lout_28_we0;
    sc_out< sc_lv<32> > lout_28_d0;
    sc_out< sc_lv<8> > lout_29_address0;
    sc_out< sc_logic > lout_29_ce0;
    sc_out< sc_logic > lout_29_we0;
    sc_out< sc_lv<32> > lout_29_d0;
    sc_out< sc_lv<8> > lout_30_address0;
    sc_out< sc_logic > lout_30_ce0;
    sc_out< sc_logic > lout_30_we0;
    sc_out< sc_lv<32> > lout_30_d0;
    sc_out< sc_lv<8> > lout_31_address0;
    sc_out< sc_logic > lout_31_ce0;
    sc_out< sc_logic > lout_31_we0;
    sc_out< sc_lv<32> > lout_31_d0;


    // Module declarations
    a0_out_initial(sc_module_name name);
    SC_HAS_PROCESS(a0_out_initial);

    ~a0_out_initial();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > j_2_fu_557_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > j_reg_540;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > exitcond1_fu_551_p2;
    sc_signal< sc_lv<32> > j_cast_fu_563_p1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<8> ap_const_lv8_A9;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_551_p2();
    void thread_j_2_fu_557_p2();
    void thread_j_cast_fu_563_p1();
    void thread_lout_0_address0();
    void thread_lout_0_ce0();
    void thread_lout_0_d0();
    void thread_lout_0_we0();
    void thread_lout_10_address0();
    void thread_lout_10_ce0();
    void thread_lout_10_d0();
    void thread_lout_10_we0();
    void thread_lout_11_address0();
    void thread_lout_11_ce0();
    void thread_lout_11_d0();
    void thread_lout_11_we0();
    void thread_lout_12_address0();
    void thread_lout_12_ce0();
    void thread_lout_12_d0();
    void thread_lout_12_we0();
    void thread_lout_13_address0();
    void thread_lout_13_ce0();
    void thread_lout_13_d0();
    void thread_lout_13_we0();
    void thread_lout_14_address0();
    void thread_lout_14_ce0();
    void thread_lout_14_d0();
    void thread_lout_14_we0();
    void thread_lout_15_address0();
    void thread_lout_15_ce0();
    void thread_lout_15_d0();
    void thread_lout_15_we0();
    void thread_lout_16_address0();
    void thread_lout_16_ce0();
    void thread_lout_16_d0();
    void thread_lout_16_we0();
    void thread_lout_17_address0();
    void thread_lout_17_ce0();
    void thread_lout_17_d0();
    void thread_lout_17_we0();
    void thread_lout_18_address0();
    void thread_lout_18_ce0();
    void thread_lout_18_d0();
    void thread_lout_18_we0();
    void thread_lout_19_address0();
    void thread_lout_19_ce0();
    void thread_lout_19_d0();
    void thread_lout_19_we0();
    void thread_lout_1_address0();
    void thread_lout_1_ce0();
    void thread_lout_1_d0();
    void thread_lout_1_we0();
    void thread_lout_20_address0();
    void thread_lout_20_ce0();
    void thread_lout_20_d0();
    void thread_lout_20_we0();
    void thread_lout_21_address0();
    void thread_lout_21_ce0();
    void thread_lout_21_d0();
    void thread_lout_21_we0();
    void thread_lout_22_address0();
    void thread_lout_22_ce0();
    void thread_lout_22_d0();
    void thread_lout_22_we0();
    void thread_lout_23_address0();
    void thread_lout_23_ce0();
    void thread_lout_23_d0();
    void thread_lout_23_we0();
    void thread_lout_24_address0();
    void thread_lout_24_ce0();
    void thread_lout_24_d0();
    void thread_lout_24_we0();
    void thread_lout_25_address0();
    void thread_lout_25_ce0();
    void thread_lout_25_d0();
    void thread_lout_25_we0();
    void thread_lout_26_address0();
    void thread_lout_26_ce0();
    void thread_lout_26_d0();
    void thread_lout_26_we0();
    void thread_lout_27_address0();
    void thread_lout_27_ce0();
    void thread_lout_27_d0();
    void thread_lout_27_we0();
    void thread_lout_28_address0();
    void thread_lout_28_ce0();
    void thread_lout_28_d0();
    void thread_lout_28_we0();
    void thread_lout_29_address0();
    void thread_lout_29_ce0();
    void thread_lout_29_d0();
    void thread_lout_29_we0();
    void thread_lout_2_address0();
    void thread_lout_2_ce0();
    void thread_lout_2_d0();
    void thread_lout_2_we0();
    void thread_lout_30_address0();
    void thread_lout_30_ce0();
    void thread_lout_30_d0();
    void thread_lout_30_we0();
    void thread_lout_31_address0();
    void thread_lout_31_ce0();
    void thread_lout_31_d0();
    void thread_lout_31_we0();
    void thread_lout_3_address0();
    void thread_lout_3_ce0();
    void thread_lout_3_d0();
    void thread_lout_3_we0();
    void thread_lout_4_address0();
    void thread_lout_4_ce0();
    void thread_lout_4_d0();
    void thread_lout_4_we0();
    void thread_lout_5_address0();
    void thread_lout_5_ce0();
    void thread_lout_5_d0();
    void thread_lout_5_we0();
    void thread_lout_6_address0();
    void thread_lout_6_ce0();
    void thread_lout_6_d0();
    void thread_lout_6_we0();
    void thread_lout_7_address0();
    void thread_lout_7_ce0();
    void thread_lout_7_d0();
    void thread_lout_7_we0();
    void thread_lout_8_address0();
    void thread_lout_8_ce0();
    void thread_lout_8_d0();
    void thread_lout_8_we0();
    void thread_lout_9_address0();
    void thread_lout_9_ce0();
    void thread_lout_9_d0();
    void thread_lout_9_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
