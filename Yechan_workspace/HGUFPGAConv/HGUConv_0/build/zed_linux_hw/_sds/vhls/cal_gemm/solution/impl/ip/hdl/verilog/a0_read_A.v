// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module a0_read_A (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        A_dout,
        A_empty_n,
        A_read,
        la_0_address0,
        la_0_ce0,
        la_0_we0,
        la_0_d0,
        la_1_address0,
        la_1_ce0,
        la_1_we0,
        la_1_d0,
        la_2_address0,
        la_2_ce0,
        la_2_we0,
        la_2_d0,
        la_3_address0,
        la_3_ce0,
        la_3_we0,
        la_3_d0,
        la_4_address0,
        la_4_ce0,
        la_4_we0,
        la_4_d0,
        la_5_address0,
        la_5_ce0,
        la_5_we0,
        la_5_d0,
        la_6_address0,
        la_6_ce0,
        la_6_we0,
        la_6_d0,
        la_7_address0,
        la_7_ce0,
        la_7_we0,
        la_7_d0,
        la_8_address0,
        la_8_ce0,
        la_8_we0,
        la_8_d0,
        la_9_address0,
        la_9_ce0,
        la_9_we0,
        la_9_d0,
        la_10_address0,
        la_10_ce0,
        la_10_we0,
        la_10_d0,
        la_11_address0,
        la_11_ce0,
        la_11_we0,
        la_11_d0,
        la_12_address0,
        la_12_ce0,
        la_12_we0,
        la_12_d0,
        la_13_address0,
        la_13_ce0,
        la_13_we0,
        la_13_d0,
        la_14_address0,
        la_14_ce0,
        la_14_we0,
        la_14_d0,
        la_15_address0,
        la_15_ce0,
        la_15_we0,
        la_15_d0,
        la_16_address0,
        la_16_ce0,
        la_16_we0,
        la_16_d0,
        la_17_address0,
        la_17_ce0,
        la_17_we0,
        la_17_d0,
        la_18_address0,
        la_18_ce0,
        la_18_we0,
        la_18_d0,
        la_19_address0,
        la_19_ce0,
        la_19_we0,
        la_19_d0,
        la_20_address0,
        la_20_ce0,
        la_20_we0,
        la_20_d0,
        la_21_address0,
        la_21_ce0,
        la_21_we0,
        la_21_d0,
        la_22_address0,
        la_22_ce0,
        la_22_we0,
        la_22_d0,
        la_23_address0,
        la_23_ce0,
        la_23_we0,
        la_23_d0,
        la_24_address0,
        la_24_ce0,
        la_24_we0,
        la_24_d0,
        la_25_address0,
        la_25_ce0,
        la_25_we0,
        la_25_d0,
        la_26_address0,
        la_26_ce0,
        la_26_we0,
        la_26_d0,
        la_27_address0,
        la_27_ce0,
        la_27_we0,
        la_27_d0,
        la_28_address0,
        la_28_ce0,
        la_28_we0,
        la_28_d0,
        la_29_address0,
        la_29_ce0,
        la_29_we0,
        la_29_d0,
        la_30_address0,
        la_30_ce0,
        la_30_we0,
        la_30_d0,
        la_31_address0,
        la_31_ce0,
        la_31_we0,
        la_31_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] A_dout;
input   A_empty_n;
output   A_read;
output  [7:0] la_0_address0;
output   la_0_ce0;
output   la_0_we0;
output  [31:0] la_0_d0;
output  [7:0] la_1_address0;
output   la_1_ce0;
output   la_1_we0;
output  [31:0] la_1_d0;
output  [7:0] la_2_address0;
output   la_2_ce0;
output   la_2_we0;
output  [31:0] la_2_d0;
output  [7:0] la_3_address0;
output   la_3_ce0;
output   la_3_we0;
output  [31:0] la_3_d0;
output  [7:0] la_4_address0;
output   la_4_ce0;
output   la_4_we0;
output  [31:0] la_4_d0;
output  [7:0] la_5_address0;
output   la_5_ce0;
output   la_5_we0;
output  [31:0] la_5_d0;
output  [7:0] la_6_address0;
output   la_6_ce0;
output   la_6_we0;
output  [31:0] la_6_d0;
output  [7:0] la_7_address0;
output   la_7_ce0;
output   la_7_we0;
output  [31:0] la_7_d0;
output  [7:0] la_8_address0;
output   la_8_ce0;
output   la_8_we0;
output  [31:0] la_8_d0;
output  [7:0] la_9_address0;
output   la_9_ce0;
output   la_9_we0;
output  [31:0] la_9_d0;
output  [7:0] la_10_address0;
output   la_10_ce0;
output   la_10_we0;
output  [31:0] la_10_d0;
output  [7:0] la_11_address0;
output   la_11_ce0;
output   la_11_we0;
output  [31:0] la_11_d0;
output  [7:0] la_12_address0;
output   la_12_ce0;
output   la_12_we0;
output  [31:0] la_12_d0;
output  [7:0] la_13_address0;
output   la_13_ce0;
output   la_13_we0;
output  [31:0] la_13_d0;
output  [7:0] la_14_address0;
output   la_14_ce0;
output   la_14_we0;
output  [31:0] la_14_d0;
output  [7:0] la_15_address0;
output   la_15_ce0;
output   la_15_we0;
output  [31:0] la_15_d0;
output  [7:0] la_16_address0;
output   la_16_ce0;
output   la_16_we0;
output  [31:0] la_16_d0;
output  [7:0] la_17_address0;
output   la_17_ce0;
output   la_17_we0;
output  [31:0] la_17_d0;
output  [7:0] la_18_address0;
output   la_18_ce0;
output   la_18_we0;
output  [31:0] la_18_d0;
output  [7:0] la_19_address0;
output   la_19_ce0;
output   la_19_we0;
output  [31:0] la_19_d0;
output  [7:0] la_20_address0;
output   la_20_ce0;
output   la_20_we0;
output  [31:0] la_20_d0;
output  [7:0] la_21_address0;
output   la_21_ce0;
output   la_21_we0;
output  [31:0] la_21_d0;
output  [7:0] la_22_address0;
output   la_22_ce0;
output   la_22_we0;
output  [31:0] la_22_d0;
output  [7:0] la_23_address0;
output   la_23_ce0;
output   la_23_we0;
output  [31:0] la_23_d0;
output  [7:0] la_24_address0;
output   la_24_ce0;
output   la_24_we0;
output  [31:0] la_24_d0;
output  [7:0] la_25_address0;
output   la_25_ce0;
output   la_25_we0;
output  [31:0] la_25_d0;
output  [7:0] la_26_address0;
output   la_26_ce0;
output   la_26_we0;
output  [31:0] la_26_d0;
output  [7:0] la_27_address0;
output   la_27_ce0;
output   la_27_we0;
output  [31:0] la_27_d0;
output  [7:0] la_28_address0;
output   la_28_ce0;
output   la_28_we0;
output  [31:0] la_28_d0;
output  [7:0] la_29_address0;
output   la_29_ce0;
output   la_29_we0;
output  [31:0] la_29_d0;
output  [7:0] la_30_address0;
output   la_30_ce0;
output   la_30_we0;
output  [31:0] la_30_d0;
output  [7:0] la_31_address0;
output   la_31_ce0;
output   la_31_we0;
output  [31:0] la_31_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_read;
reg la_0_ce0;
reg la_0_we0;
reg la_1_ce0;
reg la_1_we0;
reg la_2_ce0;
reg la_2_we0;
reg la_3_ce0;
reg la_3_we0;
reg la_4_ce0;
reg la_4_we0;
reg la_5_ce0;
reg la_5_we0;
reg la_6_ce0;
reg la_6_we0;
reg la_7_ce0;
reg la_7_we0;
reg la_8_ce0;
reg la_8_we0;
reg la_9_ce0;
reg la_9_we0;
reg la_10_ce0;
reg la_10_we0;
reg la_11_ce0;
reg la_11_we0;
reg la_12_ce0;
reg la_12_we0;
reg la_13_ce0;
reg la_13_we0;
reg la_14_ce0;
reg la_14_we0;
reg la_15_ce0;
reg la_15_we0;
reg la_16_ce0;
reg la_16_we0;
reg la_17_ce0;
reg la_17_we0;
reg la_18_ce0;
reg la_18_we0;
reg la_19_ce0;
reg la_19_we0;
reg la_20_ce0;
reg la_20_we0;
reg la_21_ce0;
reg la_21_we0;
reg la_22_ce0;
reg la_22_we0;
reg la_23_ce0;
reg la_23_we0;
reg la_24_ce0;
reg la_24_we0;
reg la_25_ce0;
reg la_25_we0;
reg la_26_ce0;
reg la_26_we0;
reg la_27_ce0;
reg la_27_we0;
reg la_28_ce0;
reg la_28_we0;
reg la_29_ce0;
reg la_29_we0;
reg la_30_ce0;
reg la_30_we0;
reg la_31_ce0;
reg la_31_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    A_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_738;
reg   [12:0] indvar_flatten_reg_620;
reg   [5:0] i_reg_631;
reg   [7:0] j_reg_642;
wire   [0:0] exitcond_flatten_fu_653_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [12:0] indvar_flatten_next_fu_659_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [7:0] j_mid2_fu_671_p3;
reg   [7:0] j_mid2_reg_747;
wire   [5:0] i_t_mid2_v_fu_685_p3;
reg   [5:0] i_t_mid2_v_reg_752;
wire   [4:0] tmp_fu_693_p1;
reg   [4:0] tmp_reg_757;
wire   [7:0] j_1_fu_697_p2;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg   [5:0] ap_phi_mux_i_phi_fu_635_p4;
wire   [31:0] j_cast1_fu_703_p1;
wire   [0:0] exitcond_fu_665_p2;
wire   [5:0] i_s_fu_679_p2;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_738 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_631 <= i_t_mid2_v_reg_752;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_631 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_653_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_620 <= indvar_flatten_next_fu_659_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_620 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_653_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_642 <= j_1_fu_697_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_642 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_738 <= exitcond_flatten_fu_653_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_653_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_t_mid2_v_reg_752 <= i_t_mid2_v_fu_685_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_653_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_mid2_reg_747 <= j_mid2_fu_671_p3;
        tmp_reg_757 <= tmp_fu_693_p1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_738 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_blk_n = A_empty_n;
    end else begin
        A_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_738 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_read = 1'b1;
    end else begin
        A_read = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_653_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_738 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_635_p4 = i_t_mid2_v_reg_752;
    end else begin
        ap_phi_mux_i_phi_fu_635_p4 = i_reg_631;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_0_ce0 = 1'b1;
    end else begin
        la_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_0_we0 = 1'b1;
    end else begin
        la_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_10_ce0 = 1'b1;
    end else begin
        la_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_10_we0 = 1'b1;
    end else begin
        la_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_11_ce0 = 1'b1;
    end else begin
        la_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_11_we0 = 1'b1;
    end else begin
        la_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_12_ce0 = 1'b1;
    end else begin
        la_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_12_we0 = 1'b1;
    end else begin
        la_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_13_ce0 = 1'b1;
    end else begin
        la_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_13_we0 = 1'b1;
    end else begin
        la_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_14_ce0 = 1'b1;
    end else begin
        la_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_14_we0 = 1'b1;
    end else begin
        la_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_15_ce0 = 1'b1;
    end else begin
        la_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_15_we0 = 1'b1;
    end else begin
        la_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_16_ce0 = 1'b1;
    end else begin
        la_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd16) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_16_we0 = 1'b1;
    end else begin
        la_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_17_ce0 = 1'b1;
    end else begin
        la_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd17) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_17_we0 = 1'b1;
    end else begin
        la_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_18_ce0 = 1'b1;
    end else begin
        la_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd18) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_18_we0 = 1'b1;
    end else begin
        la_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_19_ce0 = 1'b1;
    end else begin
        la_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd19) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_19_we0 = 1'b1;
    end else begin
        la_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_1_ce0 = 1'b1;
    end else begin
        la_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_1_we0 = 1'b1;
    end else begin
        la_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_20_ce0 = 1'b1;
    end else begin
        la_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd20) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_20_we0 = 1'b1;
    end else begin
        la_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_21_ce0 = 1'b1;
    end else begin
        la_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd21) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_21_we0 = 1'b1;
    end else begin
        la_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_22_ce0 = 1'b1;
    end else begin
        la_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_22_we0 = 1'b1;
    end else begin
        la_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_23_ce0 = 1'b1;
    end else begin
        la_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_23_we0 = 1'b1;
    end else begin
        la_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_24_ce0 = 1'b1;
    end else begin
        la_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd24) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_24_we0 = 1'b1;
    end else begin
        la_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_25_ce0 = 1'b1;
    end else begin
        la_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd25) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_25_we0 = 1'b1;
    end else begin
        la_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_26_ce0 = 1'b1;
    end else begin
        la_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd26) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_26_we0 = 1'b1;
    end else begin
        la_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_27_ce0 = 1'b1;
    end else begin
        la_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd27) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_27_we0 = 1'b1;
    end else begin
        la_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_28_ce0 = 1'b1;
    end else begin
        la_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd28) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_28_we0 = 1'b1;
    end else begin
        la_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_29_ce0 = 1'b1;
    end else begin
        la_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd29) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_29_we0 = 1'b1;
    end else begin
        la_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_2_ce0 = 1'b1;
    end else begin
        la_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_2_we0 = 1'b1;
    end else begin
        la_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_30_ce0 = 1'b1;
    end else begin
        la_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd30) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_30_we0 = 1'b1;
    end else begin
        la_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_31_ce0 = 1'b1;
    end else begin
        la_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd31) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_31_we0 = 1'b1;
    end else begin
        la_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_3_ce0 = 1'b1;
    end else begin
        la_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_3_we0 = 1'b1;
    end else begin
        la_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_4_ce0 = 1'b1;
    end else begin
        la_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_4_we0 = 1'b1;
    end else begin
        la_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_5_ce0 = 1'b1;
    end else begin
        la_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_5_we0 = 1'b1;
    end else begin
        la_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_6_ce0 = 1'b1;
    end else begin
        la_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_6_we0 = 1'b1;
    end else begin
        la_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_7_ce0 = 1'b1;
    end else begin
        la_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_7_we0 = 1'b1;
    end else begin
        la_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_8_ce0 = 1'b1;
    end else begin
        la_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_8_we0 = 1'b1;
    end else begin
        la_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_9_ce0 = 1'b1;
    end else begin
        la_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_757 == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        la_9_we0 = 1'b1;
    end else begin
        la_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_653_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_653_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b0 == A_empty_n) & (exitcond_flatten_reg_738 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == A_empty_n) & (exitcond_flatten_reg_738 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((1'b0 == A_empty_n) & (exitcond_flatten_reg_738 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond_flatten_fu_653_p2 = ((indvar_flatten_reg_620 == 13'd4608) ? 1'b1 : 1'b0);

assign exitcond_fu_665_p2 = ((j_reg_642 == 8'd144) ? 1'b1 : 1'b0);

assign i_s_fu_679_p2 = (6'd1 + ap_phi_mux_i_phi_fu_635_p4);

assign i_t_mid2_v_fu_685_p3 = ((exitcond_fu_665_p2[0:0] === 1'b1) ? i_s_fu_679_p2 : ap_phi_mux_i_phi_fu_635_p4);

assign indvar_flatten_next_fu_659_p2 = (indvar_flatten_reg_620 + 13'd1);

assign j_1_fu_697_p2 = (j_mid2_fu_671_p3 + 8'd1);

assign j_cast1_fu_703_p1 = j_mid2_reg_747;

assign j_mid2_fu_671_p3 = ((exitcond_fu_665_p2[0:0] === 1'b1) ? 8'd0 : j_reg_642);

assign la_0_address0 = j_cast1_fu_703_p1;

assign la_0_d0 = A_dout;

assign la_10_address0 = j_cast1_fu_703_p1;

assign la_10_d0 = A_dout;

assign la_11_address0 = j_cast1_fu_703_p1;

assign la_11_d0 = A_dout;

assign la_12_address0 = j_cast1_fu_703_p1;

assign la_12_d0 = A_dout;

assign la_13_address0 = j_cast1_fu_703_p1;

assign la_13_d0 = A_dout;

assign la_14_address0 = j_cast1_fu_703_p1;

assign la_14_d0 = A_dout;

assign la_15_address0 = j_cast1_fu_703_p1;

assign la_15_d0 = A_dout;

assign la_16_address0 = j_cast1_fu_703_p1;

assign la_16_d0 = A_dout;

assign la_17_address0 = j_cast1_fu_703_p1;

assign la_17_d0 = A_dout;

assign la_18_address0 = j_cast1_fu_703_p1;

assign la_18_d0 = A_dout;

assign la_19_address0 = j_cast1_fu_703_p1;

assign la_19_d0 = A_dout;

assign la_1_address0 = j_cast1_fu_703_p1;

assign la_1_d0 = A_dout;

assign la_20_address0 = j_cast1_fu_703_p1;

assign la_20_d0 = A_dout;

assign la_21_address0 = j_cast1_fu_703_p1;

assign la_21_d0 = A_dout;

assign la_22_address0 = j_cast1_fu_703_p1;

assign la_22_d0 = A_dout;

assign la_23_address0 = j_cast1_fu_703_p1;

assign la_23_d0 = A_dout;

assign la_24_address0 = j_cast1_fu_703_p1;

assign la_24_d0 = A_dout;

assign la_25_address0 = j_cast1_fu_703_p1;

assign la_25_d0 = A_dout;

assign la_26_address0 = j_cast1_fu_703_p1;

assign la_26_d0 = A_dout;

assign la_27_address0 = j_cast1_fu_703_p1;

assign la_27_d0 = A_dout;

assign la_28_address0 = j_cast1_fu_703_p1;

assign la_28_d0 = A_dout;

assign la_29_address0 = j_cast1_fu_703_p1;

assign la_29_d0 = A_dout;

assign la_2_address0 = j_cast1_fu_703_p1;

assign la_2_d0 = A_dout;

assign la_30_address0 = j_cast1_fu_703_p1;

assign la_30_d0 = A_dout;

assign la_31_address0 = j_cast1_fu_703_p1;

assign la_31_d0 = A_dout;

assign la_3_address0 = j_cast1_fu_703_p1;

assign la_3_d0 = A_dout;

assign la_4_address0 = j_cast1_fu_703_p1;

assign la_4_d0 = A_dout;

assign la_5_address0 = j_cast1_fu_703_p1;

assign la_5_d0 = A_dout;

assign la_6_address0 = j_cast1_fu_703_p1;

assign la_6_d0 = A_dout;

assign la_7_address0 = j_cast1_fu_703_p1;

assign la_7_d0 = A_dout;

assign la_8_address0 = j_cast1_fu_703_p1;

assign la_8_d0 = A_dout;

assign la_9_address0 = j_cast1_fu_703_p1;

assign la_9_d0 = A_dout;

assign tmp_fu_693_p1 = i_t_mid2_v_fu_685_p3[4:0];

endmodule //a0_read_A
