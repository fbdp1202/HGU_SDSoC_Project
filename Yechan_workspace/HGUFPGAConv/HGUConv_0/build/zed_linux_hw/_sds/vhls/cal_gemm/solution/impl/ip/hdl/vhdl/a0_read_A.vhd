-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity a0_read_A is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_empty_n : IN STD_LOGIC;
    A_read : OUT STD_LOGIC;
    la_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_0_ce0 : OUT STD_LOGIC;
    la_0_we0 : OUT STD_LOGIC;
    la_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_1_ce0 : OUT STD_LOGIC;
    la_1_we0 : OUT STD_LOGIC;
    la_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_2_ce0 : OUT STD_LOGIC;
    la_2_we0 : OUT STD_LOGIC;
    la_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_3_ce0 : OUT STD_LOGIC;
    la_3_we0 : OUT STD_LOGIC;
    la_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_4_ce0 : OUT STD_LOGIC;
    la_4_we0 : OUT STD_LOGIC;
    la_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_5_ce0 : OUT STD_LOGIC;
    la_5_we0 : OUT STD_LOGIC;
    la_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_6_ce0 : OUT STD_LOGIC;
    la_6_we0 : OUT STD_LOGIC;
    la_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_7_ce0 : OUT STD_LOGIC;
    la_7_we0 : OUT STD_LOGIC;
    la_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_8_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_8_ce0 : OUT STD_LOGIC;
    la_8_we0 : OUT STD_LOGIC;
    la_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_9_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_9_ce0 : OUT STD_LOGIC;
    la_9_we0 : OUT STD_LOGIC;
    la_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_10_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_10_ce0 : OUT STD_LOGIC;
    la_10_we0 : OUT STD_LOGIC;
    la_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_11_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_11_ce0 : OUT STD_LOGIC;
    la_11_we0 : OUT STD_LOGIC;
    la_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_12_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_12_ce0 : OUT STD_LOGIC;
    la_12_we0 : OUT STD_LOGIC;
    la_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_13_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_13_ce0 : OUT STD_LOGIC;
    la_13_we0 : OUT STD_LOGIC;
    la_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_14_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_14_ce0 : OUT STD_LOGIC;
    la_14_we0 : OUT STD_LOGIC;
    la_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_15_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_15_ce0 : OUT STD_LOGIC;
    la_15_we0 : OUT STD_LOGIC;
    la_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_16_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_16_ce0 : OUT STD_LOGIC;
    la_16_we0 : OUT STD_LOGIC;
    la_16_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_17_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_17_ce0 : OUT STD_LOGIC;
    la_17_we0 : OUT STD_LOGIC;
    la_17_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_18_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_18_ce0 : OUT STD_LOGIC;
    la_18_we0 : OUT STD_LOGIC;
    la_18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_19_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_19_ce0 : OUT STD_LOGIC;
    la_19_we0 : OUT STD_LOGIC;
    la_19_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_20_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_20_ce0 : OUT STD_LOGIC;
    la_20_we0 : OUT STD_LOGIC;
    la_20_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_21_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_21_ce0 : OUT STD_LOGIC;
    la_21_we0 : OUT STD_LOGIC;
    la_21_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_22_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_22_ce0 : OUT STD_LOGIC;
    la_22_we0 : OUT STD_LOGIC;
    la_22_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_23_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_23_ce0 : OUT STD_LOGIC;
    la_23_we0 : OUT STD_LOGIC;
    la_23_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_24_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_24_ce0 : OUT STD_LOGIC;
    la_24_we0 : OUT STD_LOGIC;
    la_24_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_25_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_25_ce0 : OUT STD_LOGIC;
    la_25_we0 : OUT STD_LOGIC;
    la_25_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_26_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_26_ce0 : OUT STD_LOGIC;
    la_26_we0 : OUT STD_LOGIC;
    la_26_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_27_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_27_ce0 : OUT STD_LOGIC;
    la_27_we0 : OUT STD_LOGIC;
    la_27_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_28_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_28_ce0 : OUT STD_LOGIC;
    la_28_we0 : OUT STD_LOGIC;
    la_28_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_29_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_29_ce0 : OUT STD_LOGIC;
    la_29_we0 : OUT STD_LOGIC;
    la_29_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_30_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_30_ce0 : OUT STD_LOGIC;
    la_30_we0 : OUT STD_LOGIC;
    la_30_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    la_31_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    la_31_ce0 : OUT STD_LOGIC;
    la_31_we0 : OUT STD_LOGIC;
    la_31_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of a0_read_A is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv13_1200 : STD_LOGIC_VECTOR (12 downto 0) := "1001000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv8_90 : STD_LOGIC_VECTOR (7 downto 0) := "10010000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal A_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_738 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_620 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_reg_631 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_reg_642 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_659_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal j_mid2_fu_671_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_mid2_reg_747 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_t_mid2_v_fu_685_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_t_mid2_v_reg_752 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_693_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_757 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_fu_697_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_phi_mux_i_phi_fu_635_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_cast1_fu_703_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_s_fu_679_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_631_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_738 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_631 <= i_t_mid2_v_reg_752;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_631 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_620_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_653_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_620 <= indvar_flatten_next_fu_659_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_620 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    j_reg_642_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_653_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_reg_642 <= j_1_fu_697_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_642 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_738 <= exitcond_flatten_fu_653_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_653_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_t_mid2_v_reg_752 <= i_t_mid2_v_fu_685_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_653_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                j_mid2_reg_747 <= j_mid2_fu_671_p3;
                tmp_reg_757 <= tmp_fu_693_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, exitcond_flatten_fu_653_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_653_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_653_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    A_blk_n_assign_proc : process(A_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_738)
    begin
        if (((exitcond_flatten_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_blk_n <= A_empty_n;
        else 
            A_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_738, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_738 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_read <= ap_const_logic_1;
        else 
            A_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(A_empty_n, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_738)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_const_logic_0 = A_empty_n) and (exitcond_flatten_reg_738 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(A_empty_n, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_738)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = A_empty_n) and (exitcond_flatten_reg_738 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(A_empty_n, exitcond_flatten_reg_738)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((ap_const_logic_0 = A_empty_n) and (exitcond_flatten_reg_738 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_653_p2)
    begin
        if ((exitcond_flatten_fu_653_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_635_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_738, i_reg_631, i_t_mid2_v_reg_752)
    begin
        if (((exitcond_flatten_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_635_p4 <= i_t_mid2_v_reg_752;
        else 
            ap_phi_mux_i_phi_fu_635_p4 <= i_reg_631;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_653_p2 <= "1" when (indvar_flatten_reg_620 = ap_const_lv13_1200) else "0";
    exitcond_fu_665_p2 <= "1" when (j_reg_642 = ap_const_lv8_90) else "0";
    i_s_fu_679_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(ap_phi_mux_i_phi_fu_635_p4));
    i_t_mid2_v_fu_685_p3 <= 
        i_s_fu_679_p2 when (exitcond_fu_665_p2(0) = '1') else 
        ap_phi_mux_i_phi_fu_635_p4;
    indvar_flatten_next_fu_659_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_620) + unsigned(ap_const_lv13_1));
    j_1_fu_697_p2 <= std_logic_vector(unsigned(j_mid2_fu_671_p3) + unsigned(ap_const_lv8_1));
    j_cast1_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_reg_747),32));
    j_mid2_fu_671_p3 <= 
        ap_const_lv8_0 when (exitcond_fu_665_p2(0) = '1') else 
        j_reg_642;
    la_0_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_0_ce0 <= ap_const_logic_1;
        else 
            la_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_0_d0 <= A_dout;

    la_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_0_we0 <= ap_const_logic_1;
        else 
            la_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_10_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_10_ce0 <= ap_const_logic_1;
        else 
            la_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_10_d0 <= A_dout;

    la_10_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_10_we0 <= ap_const_logic_1;
        else 
            la_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_11_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_11_ce0 <= ap_const_logic_1;
        else 
            la_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_11_d0 <= A_dout;

    la_11_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_11_we0 <= ap_const_logic_1;
        else 
            la_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_12_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_12_ce0 <= ap_const_logic_1;
        else 
            la_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_12_d0 <= A_dout;

    la_12_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_12_we0 <= ap_const_logic_1;
        else 
            la_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_13_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_13_ce0 <= ap_const_logic_1;
        else 
            la_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_13_d0 <= A_dout;

    la_13_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_13_we0 <= ap_const_logic_1;
        else 
            la_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_14_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_14_ce0 <= ap_const_logic_1;
        else 
            la_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_14_d0 <= A_dout;

    la_14_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_14_we0 <= ap_const_logic_1;
        else 
            la_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_15_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_15_ce0 <= ap_const_logic_1;
        else 
            la_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_15_d0 <= A_dout;

    la_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_15_we0 <= ap_const_logic_1;
        else 
            la_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_16_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_16_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_16_ce0 <= ap_const_logic_1;
        else 
            la_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_16_d0 <= A_dout;

    la_16_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_10) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_16_we0 <= ap_const_logic_1;
        else 
            la_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_17_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_17_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_17_ce0 <= ap_const_logic_1;
        else 
            la_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_17_d0 <= A_dout;

    la_17_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_11) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_17_we0 <= ap_const_logic_1;
        else 
            la_17_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_18_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_18_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_18_ce0 <= ap_const_logic_1;
        else 
            la_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_18_d0 <= A_dout;

    la_18_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_12) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_18_we0 <= ap_const_logic_1;
        else 
            la_18_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_19_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_19_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_19_ce0 <= ap_const_logic_1;
        else 
            la_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_19_d0 <= A_dout;

    la_19_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_13) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_19_we0 <= ap_const_logic_1;
        else 
            la_19_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_1_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_1_ce0 <= ap_const_logic_1;
        else 
            la_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_1_d0 <= A_dout;

    la_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_1_we0 <= ap_const_logic_1;
        else 
            la_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_20_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_20_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_20_ce0 <= ap_const_logic_1;
        else 
            la_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_20_d0 <= A_dout;

    la_20_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_14) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_20_we0 <= ap_const_logic_1;
        else 
            la_20_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_21_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_21_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_21_ce0 <= ap_const_logic_1;
        else 
            la_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_21_d0 <= A_dout;

    la_21_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_15) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_21_we0 <= ap_const_logic_1;
        else 
            la_21_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_22_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_22_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_22_ce0 <= ap_const_logic_1;
        else 
            la_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_22_d0 <= A_dout;

    la_22_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_16) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_22_we0 <= ap_const_logic_1;
        else 
            la_22_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_23_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_23_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_23_ce0 <= ap_const_logic_1;
        else 
            la_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_23_d0 <= A_dout;

    la_23_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_17) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_23_we0 <= ap_const_logic_1;
        else 
            la_23_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_24_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_24_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_24_ce0 <= ap_const_logic_1;
        else 
            la_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_24_d0 <= A_dout;

    la_24_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_18) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_24_we0 <= ap_const_logic_1;
        else 
            la_24_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_25_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_25_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_25_ce0 <= ap_const_logic_1;
        else 
            la_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_25_d0 <= A_dout;

    la_25_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_19) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_25_we0 <= ap_const_logic_1;
        else 
            la_25_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_26_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_26_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_26_ce0 <= ap_const_logic_1;
        else 
            la_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_26_d0 <= A_dout;

    la_26_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_1A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_26_we0 <= ap_const_logic_1;
        else 
            la_26_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_27_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_27_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_27_ce0 <= ap_const_logic_1;
        else 
            la_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_27_d0 <= A_dout;

    la_27_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_1B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_27_we0 <= ap_const_logic_1;
        else 
            la_27_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_28_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_28_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_28_ce0 <= ap_const_logic_1;
        else 
            la_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_28_d0 <= A_dout;

    la_28_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_1C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_28_we0 <= ap_const_logic_1;
        else 
            la_28_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_29_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_29_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_29_ce0 <= ap_const_logic_1;
        else 
            la_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_29_d0 <= A_dout;

    la_29_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_1D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_29_we0 <= ap_const_logic_1;
        else 
            la_29_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_2_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_2_ce0 <= ap_const_logic_1;
        else 
            la_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_2_d0 <= A_dout;

    la_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_2_we0 <= ap_const_logic_1;
        else 
            la_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_30_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_30_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_30_ce0 <= ap_const_logic_1;
        else 
            la_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_30_d0 <= A_dout;

    la_30_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_1E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_30_we0 <= ap_const_logic_1;
        else 
            la_30_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_31_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_31_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_31_ce0 <= ap_const_logic_1;
        else 
            la_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_31_d0 <= A_dout;

    la_31_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_1F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_31_we0 <= ap_const_logic_1;
        else 
            la_31_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_3_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_3_ce0 <= ap_const_logic_1;
        else 
            la_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_3_d0 <= A_dout;

    la_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_3_we0 <= ap_const_logic_1;
        else 
            la_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_4_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_4_ce0 <= ap_const_logic_1;
        else 
            la_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_4_d0 <= A_dout;

    la_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_4_we0 <= ap_const_logic_1;
        else 
            la_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_5_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_5_ce0 <= ap_const_logic_1;
        else 
            la_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_5_d0 <= A_dout;

    la_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_5_we0 <= ap_const_logic_1;
        else 
            la_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_6_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_6_ce0 <= ap_const_logic_1;
        else 
            la_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_6_d0 <= A_dout;

    la_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_6_we0 <= ap_const_logic_1;
        else 
            la_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_7_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_7_ce0 <= ap_const_logic_1;
        else 
            la_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_7_d0 <= A_dout;

    la_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_7_we0 <= ap_const_logic_1;
        else 
            la_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_8_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_8_ce0 <= ap_const_logic_1;
        else 
            la_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_8_d0 <= A_dout;

    la_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_8_we0 <= ap_const_logic_1;
        else 
            la_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    la_9_address0 <= j_cast1_fu_703_p1(8 - 1 downto 0);

    la_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_9_ce0 <= ap_const_logic_1;
        else 
            la_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    la_9_d0 <= A_dout;

    la_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_757)
    begin
        if (((tmp_reg_757 = ap_const_lv5_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            la_9_we0 <= ap_const_logic_1;
        else 
            la_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_693_p1 <= i_t_mid2_v_fu_685_p3(5 - 1 downto 0);
end behav;
