// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "a0_out_initial.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic a0_out_initial::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic a0_out_initial::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> a0_out_initial::ap_ST_fsm_state1 = "1";
const sc_lv<3> a0_out_initial::ap_ST_fsm_state2 = "10";
const sc_lv<3> a0_out_initial::ap_ST_fsm_state3 = "100";
const sc_lv<32> a0_out_initial::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> a0_out_initial::ap_const_lv32_1 = "1";
const sc_lv<8> a0_out_initial::ap_const_lv8_0 = "00000000";
const sc_lv<1> a0_out_initial::ap_const_lv1_0 = "0";
const sc_lv<8> a0_out_initial::ap_const_lv8_A9 = "10101001";
const sc_lv<8> a0_out_initial::ap_const_lv8_1 = "1";
const sc_lv<32> a0_out_initial::ap_const_lv32_2 = "10";
const bool a0_out_initial::ap_const_boolean_1 = true;

a0_out_initial::a0_out_initial(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_exitcond1_fu_551_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_reg_540 );

    SC_METHOD(thread_j_2_fu_557_p2);
    sensitive << ( j_reg_540 );

    SC_METHOD(thread_j_cast_fu_563_p1);
    sensitive << ( j_reg_540 );

    SC_METHOD(thread_lout_0_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_0_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_0_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_0_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_10_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_10_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_10_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_10_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_11_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_11_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_11_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_11_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_12_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_12_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_12_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_12_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_13_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_13_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_13_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_13_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_14_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_14_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_14_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_14_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_15_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_15_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_15_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_15_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_16_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_16_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_16_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_16_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_17_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_17_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_17_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_17_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_18_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_18_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_18_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_18_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_19_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_19_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_19_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_19_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_1_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_1_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_1_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_20_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_20_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_20_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_20_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_21_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_21_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_21_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_21_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_22_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_22_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_22_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_22_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_23_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_23_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_23_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_23_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_24_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_24_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_24_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_24_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_25_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_25_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_25_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_25_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_26_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_26_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_26_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_26_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_27_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_27_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_27_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_27_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_28_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_28_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_28_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_28_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_29_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_29_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_29_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_29_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_2_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_2_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_2_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_2_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_30_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_30_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_30_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_30_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_31_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_31_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_31_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_31_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_3_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_3_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_3_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_3_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_4_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_4_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_4_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_4_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_5_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_5_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_5_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_5_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_6_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_6_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_6_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_6_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_7_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_7_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_7_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_7_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_8_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_8_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_8_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_8_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_lout_9_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_cast_fu_563_p1 );

    SC_METHOD(thread_lout_9_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_9_d0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lout_9_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_551_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "a0_out_initial_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, lout_0_address0, "(port)lout_0_address0");
    sc_trace(mVcdFile, lout_0_ce0, "(port)lout_0_ce0");
    sc_trace(mVcdFile, lout_0_we0, "(port)lout_0_we0");
    sc_trace(mVcdFile, lout_0_d0, "(port)lout_0_d0");
    sc_trace(mVcdFile, lout_1_address0, "(port)lout_1_address0");
    sc_trace(mVcdFile, lout_1_ce0, "(port)lout_1_ce0");
    sc_trace(mVcdFile, lout_1_we0, "(port)lout_1_we0");
    sc_trace(mVcdFile, lout_1_d0, "(port)lout_1_d0");
    sc_trace(mVcdFile, lout_2_address0, "(port)lout_2_address0");
    sc_trace(mVcdFile, lout_2_ce0, "(port)lout_2_ce0");
    sc_trace(mVcdFile, lout_2_we0, "(port)lout_2_we0");
    sc_trace(mVcdFile, lout_2_d0, "(port)lout_2_d0");
    sc_trace(mVcdFile, lout_3_address0, "(port)lout_3_address0");
    sc_trace(mVcdFile, lout_3_ce0, "(port)lout_3_ce0");
    sc_trace(mVcdFile, lout_3_we0, "(port)lout_3_we0");
    sc_trace(mVcdFile, lout_3_d0, "(port)lout_3_d0");
    sc_trace(mVcdFile, lout_4_address0, "(port)lout_4_address0");
    sc_trace(mVcdFile, lout_4_ce0, "(port)lout_4_ce0");
    sc_trace(mVcdFile, lout_4_we0, "(port)lout_4_we0");
    sc_trace(mVcdFile, lout_4_d0, "(port)lout_4_d0");
    sc_trace(mVcdFile, lout_5_address0, "(port)lout_5_address0");
    sc_trace(mVcdFile, lout_5_ce0, "(port)lout_5_ce0");
    sc_trace(mVcdFile, lout_5_we0, "(port)lout_5_we0");
    sc_trace(mVcdFile, lout_5_d0, "(port)lout_5_d0");
    sc_trace(mVcdFile, lout_6_address0, "(port)lout_6_address0");
    sc_trace(mVcdFile, lout_6_ce0, "(port)lout_6_ce0");
    sc_trace(mVcdFile, lout_6_we0, "(port)lout_6_we0");
    sc_trace(mVcdFile, lout_6_d0, "(port)lout_6_d0");
    sc_trace(mVcdFile, lout_7_address0, "(port)lout_7_address0");
    sc_trace(mVcdFile, lout_7_ce0, "(port)lout_7_ce0");
    sc_trace(mVcdFile, lout_7_we0, "(port)lout_7_we0");
    sc_trace(mVcdFile, lout_7_d0, "(port)lout_7_d0");
    sc_trace(mVcdFile, lout_8_address0, "(port)lout_8_address0");
    sc_trace(mVcdFile, lout_8_ce0, "(port)lout_8_ce0");
    sc_trace(mVcdFile, lout_8_we0, "(port)lout_8_we0");
    sc_trace(mVcdFile, lout_8_d0, "(port)lout_8_d0");
    sc_trace(mVcdFile, lout_9_address0, "(port)lout_9_address0");
    sc_trace(mVcdFile, lout_9_ce0, "(port)lout_9_ce0");
    sc_trace(mVcdFile, lout_9_we0, "(port)lout_9_we0");
    sc_trace(mVcdFile, lout_9_d0, "(port)lout_9_d0");
    sc_trace(mVcdFile, lout_10_address0, "(port)lout_10_address0");
    sc_trace(mVcdFile, lout_10_ce0, "(port)lout_10_ce0");
    sc_trace(mVcdFile, lout_10_we0, "(port)lout_10_we0");
    sc_trace(mVcdFile, lout_10_d0, "(port)lout_10_d0");
    sc_trace(mVcdFile, lout_11_address0, "(port)lout_11_address0");
    sc_trace(mVcdFile, lout_11_ce0, "(port)lout_11_ce0");
    sc_trace(mVcdFile, lout_11_we0, "(port)lout_11_we0");
    sc_trace(mVcdFile, lout_11_d0, "(port)lout_11_d0");
    sc_trace(mVcdFile, lout_12_address0, "(port)lout_12_address0");
    sc_trace(mVcdFile, lout_12_ce0, "(port)lout_12_ce0");
    sc_trace(mVcdFile, lout_12_we0, "(port)lout_12_we0");
    sc_trace(mVcdFile, lout_12_d0, "(port)lout_12_d0");
    sc_trace(mVcdFile, lout_13_address0, "(port)lout_13_address0");
    sc_trace(mVcdFile, lout_13_ce0, "(port)lout_13_ce0");
    sc_trace(mVcdFile, lout_13_we0, "(port)lout_13_we0");
    sc_trace(mVcdFile, lout_13_d0, "(port)lout_13_d0");
    sc_trace(mVcdFile, lout_14_address0, "(port)lout_14_address0");
    sc_trace(mVcdFile, lout_14_ce0, "(port)lout_14_ce0");
    sc_trace(mVcdFile, lout_14_we0, "(port)lout_14_we0");
    sc_trace(mVcdFile, lout_14_d0, "(port)lout_14_d0");
    sc_trace(mVcdFile, lout_15_address0, "(port)lout_15_address0");
    sc_trace(mVcdFile, lout_15_ce0, "(port)lout_15_ce0");
    sc_trace(mVcdFile, lout_15_we0, "(port)lout_15_we0");
    sc_trace(mVcdFile, lout_15_d0, "(port)lout_15_d0");
    sc_trace(mVcdFile, lout_16_address0, "(port)lout_16_address0");
    sc_trace(mVcdFile, lout_16_ce0, "(port)lout_16_ce0");
    sc_trace(mVcdFile, lout_16_we0, "(port)lout_16_we0");
    sc_trace(mVcdFile, lout_16_d0, "(port)lout_16_d0");
    sc_trace(mVcdFile, lout_17_address0, "(port)lout_17_address0");
    sc_trace(mVcdFile, lout_17_ce0, "(port)lout_17_ce0");
    sc_trace(mVcdFile, lout_17_we0, "(port)lout_17_we0");
    sc_trace(mVcdFile, lout_17_d0, "(port)lout_17_d0");
    sc_trace(mVcdFile, lout_18_address0, "(port)lout_18_address0");
    sc_trace(mVcdFile, lout_18_ce0, "(port)lout_18_ce0");
    sc_trace(mVcdFile, lout_18_we0, "(port)lout_18_we0");
    sc_trace(mVcdFile, lout_18_d0, "(port)lout_18_d0");
    sc_trace(mVcdFile, lout_19_address0, "(port)lout_19_address0");
    sc_trace(mVcdFile, lout_19_ce0, "(port)lout_19_ce0");
    sc_trace(mVcdFile, lout_19_we0, "(port)lout_19_we0");
    sc_trace(mVcdFile, lout_19_d0, "(port)lout_19_d0");
    sc_trace(mVcdFile, lout_20_address0, "(port)lout_20_address0");
    sc_trace(mVcdFile, lout_20_ce0, "(port)lout_20_ce0");
    sc_trace(mVcdFile, lout_20_we0, "(port)lout_20_we0");
    sc_trace(mVcdFile, lout_20_d0, "(port)lout_20_d0");
    sc_trace(mVcdFile, lout_21_address0, "(port)lout_21_address0");
    sc_trace(mVcdFile, lout_21_ce0, "(port)lout_21_ce0");
    sc_trace(mVcdFile, lout_21_we0, "(port)lout_21_we0");
    sc_trace(mVcdFile, lout_21_d0, "(port)lout_21_d0");
    sc_trace(mVcdFile, lout_22_address0, "(port)lout_22_address0");
    sc_trace(mVcdFile, lout_22_ce0, "(port)lout_22_ce0");
    sc_trace(mVcdFile, lout_22_we0, "(port)lout_22_we0");
    sc_trace(mVcdFile, lout_22_d0, "(port)lout_22_d0");
    sc_trace(mVcdFile, lout_23_address0, "(port)lout_23_address0");
    sc_trace(mVcdFile, lout_23_ce0, "(port)lout_23_ce0");
    sc_trace(mVcdFile, lout_23_we0, "(port)lout_23_we0");
    sc_trace(mVcdFile, lout_23_d0, "(port)lout_23_d0");
    sc_trace(mVcdFile, lout_24_address0, "(port)lout_24_address0");
    sc_trace(mVcdFile, lout_24_ce0, "(port)lout_24_ce0");
    sc_trace(mVcdFile, lout_24_we0, "(port)lout_24_we0");
    sc_trace(mVcdFile, lout_24_d0, "(port)lout_24_d0");
    sc_trace(mVcdFile, lout_25_address0, "(port)lout_25_address0");
    sc_trace(mVcdFile, lout_25_ce0, "(port)lout_25_ce0");
    sc_trace(mVcdFile, lout_25_we0, "(port)lout_25_we0");
    sc_trace(mVcdFile, lout_25_d0, "(port)lout_25_d0");
    sc_trace(mVcdFile, lout_26_address0, "(port)lout_26_address0");
    sc_trace(mVcdFile, lout_26_ce0, "(port)lout_26_ce0");
    sc_trace(mVcdFile, lout_26_we0, "(port)lout_26_we0");
    sc_trace(mVcdFile, lout_26_d0, "(port)lout_26_d0");
    sc_trace(mVcdFile, lout_27_address0, "(port)lout_27_address0");
    sc_trace(mVcdFile, lout_27_ce0, "(port)lout_27_ce0");
    sc_trace(mVcdFile, lout_27_we0, "(port)lout_27_we0");
    sc_trace(mVcdFile, lout_27_d0, "(port)lout_27_d0");
    sc_trace(mVcdFile, lout_28_address0, "(port)lout_28_address0");
    sc_trace(mVcdFile, lout_28_ce0, "(port)lout_28_ce0");
    sc_trace(mVcdFile, lout_28_we0, "(port)lout_28_we0");
    sc_trace(mVcdFile, lout_28_d0, "(port)lout_28_d0");
    sc_trace(mVcdFile, lout_29_address0, "(port)lout_29_address0");
    sc_trace(mVcdFile, lout_29_ce0, "(port)lout_29_ce0");
    sc_trace(mVcdFile, lout_29_we0, "(port)lout_29_we0");
    sc_trace(mVcdFile, lout_29_d0, "(port)lout_29_d0");
    sc_trace(mVcdFile, lout_30_address0, "(port)lout_30_address0");
    sc_trace(mVcdFile, lout_30_ce0, "(port)lout_30_ce0");
    sc_trace(mVcdFile, lout_30_we0, "(port)lout_30_we0");
    sc_trace(mVcdFile, lout_30_d0, "(port)lout_30_d0");
    sc_trace(mVcdFile, lout_31_address0, "(port)lout_31_address0");
    sc_trace(mVcdFile, lout_31_ce0, "(port)lout_31_ce0");
    sc_trace(mVcdFile, lout_31_we0, "(port)lout_31_we0");
    sc_trace(mVcdFile, lout_31_d0, "(port)lout_31_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, j_2_fu_557_p2, "j_2_fu_557_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, j_reg_540, "j_reg_540");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, exitcond1_fu_551_p2, "exitcond1_fu_551_p2");
    sc_trace(mVcdFile, j_cast_fu_563_p1, "j_cast_fu_563_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

a0_out_initial::~a0_out_initial() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void a0_out_initial::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_540 = j_2_fu_557_p2.read();
    } else if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        j_reg_540 = ap_const_lv8_0;
    }
}

void a0_out_initial::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void a0_out_initial::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void a0_out_initial::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void a0_out_initial::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void a0_out_initial::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void a0_out_initial::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void a0_out_initial::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void a0_out_initial::thread_exitcond1_fu_551_p2() {
    exitcond1_fu_551_p2 = (!j_reg_540.read().is_01() || !ap_const_lv8_A9.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_540.read() == ap_const_lv8_A9);
}

void a0_out_initial::thread_j_2_fu_557_p2() {
    j_2_fu_557_p2 = (!j_reg_540.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(j_reg_540.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void a0_out_initial::thread_j_cast_fu_563_p1() {
    j_cast_fu_563_p1 = esl_zext<32,8>(j_reg_540.read());
}

void a0_out_initial::thread_lout_0_address0() {
    lout_0_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_0_ce0 = ap_const_logic_1;
    } else {
        lout_0_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_0_d0() {
    lout_0_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_0_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_0_we0 = ap_const_logic_1;
    } else {
        lout_0_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_10_address0() {
    lout_10_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_10_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_10_ce0 = ap_const_logic_1;
    } else {
        lout_10_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_10_d0() {
    lout_10_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_10_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_10_we0 = ap_const_logic_1;
    } else {
        lout_10_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_11_address0() {
    lout_11_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_11_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_11_ce0 = ap_const_logic_1;
    } else {
        lout_11_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_11_d0() {
    lout_11_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_11_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_11_we0 = ap_const_logic_1;
    } else {
        lout_11_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_12_address0() {
    lout_12_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_12_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_12_ce0 = ap_const_logic_1;
    } else {
        lout_12_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_12_d0() {
    lout_12_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_12_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_12_we0 = ap_const_logic_1;
    } else {
        lout_12_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_13_address0() {
    lout_13_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_13_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_13_ce0 = ap_const_logic_1;
    } else {
        lout_13_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_13_d0() {
    lout_13_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_13_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_13_we0 = ap_const_logic_1;
    } else {
        lout_13_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_14_address0() {
    lout_14_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_14_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_14_ce0 = ap_const_logic_1;
    } else {
        lout_14_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_14_d0() {
    lout_14_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_14_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_14_we0 = ap_const_logic_1;
    } else {
        lout_14_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_15_address0() {
    lout_15_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_15_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_15_ce0 = ap_const_logic_1;
    } else {
        lout_15_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_15_d0() {
    lout_15_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_15_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_15_we0 = ap_const_logic_1;
    } else {
        lout_15_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_16_address0() {
    lout_16_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_16_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_16_ce0 = ap_const_logic_1;
    } else {
        lout_16_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_16_d0() {
    lout_16_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_16_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_16_we0 = ap_const_logic_1;
    } else {
        lout_16_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_17_address0() {
    lout_17_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_17_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_17_ce0 = ap_const_logic_1;
    } else {
        lout_17_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_17_d0() {
    lout_17_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_17_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_17_we0 = ap_const_logic_1;
    } else {
        lout_17_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_18_address0() {
    lout_18_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_18_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_18_ce0 = ap_const_logic_1;
    } else {
        lout_18_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_18_d0() {
    lout_18_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_18_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_18_we0 = ap_const_logic_1;
    } else {
        lout_18_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_19_address0() {
    lout_19_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_19_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_19_ce0 = ap_const_logic_1;
    } else {
        lout_19_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_19_d0() {
    lout_19_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_19_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_19_we0 = ap_const_logic_1;
    } else {
        lout_19_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_1_address0() {
    lout_1_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_1_ce0 = ap_const_logic_1;
    } else {
        lout_1_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_1_d0() {
    lout_1_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_1_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_1_we0 = ap_const_logic_1;
    } else {
        lout_1_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_20_address0() {
    lout_20_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_20_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_20_ce0 = ap_const_logic_1;
    } else {
        lout_20_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_20_d0() {
    lout_20_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_20_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_20_we0 = ap_const_logic_1;
    } else {
        lout_20_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_21_address0() {
    lout_21_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_21_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_21_ce0 = ap_const_logic_1;
    } else {
        lout_21_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_21_d0() {
    lout_21_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_21_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_21_we0 = ap_const_logic_1;
    } else {
        lout_21_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_22_address0() {
    lout_22_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_22_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_22_ce0 = ap_const_logic_1;
    } else {
        lout_22_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_22_d0() {
    lout_22_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_22_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_22_we0 = ap_const_logic_1;
    } else {
        lout_22_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_23_address0() {
    lout_23_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_23_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_23_ce0 = ap_const_logic_1;
    } else {
        lout_23_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_23_d0() {
    lout_23_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_23_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_23_we0 = ap_const_logic_1;
    } else {
        lout_23_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_24_address0() {
    lout_24_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_24_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_24_ce0 = ap_const_logic_1;
    } else {
        lout_24_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_24_d0() {
    lout_24_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_24_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_24_we0 = ap_const_logic_1;
    } else {
        lout_24_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_25_address0() {
    lout_25_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_25_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_25_ce0 = ap_const_logic_1;
    } else {
        lout_25_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_25_d0() {
    lout_25_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_25_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_25_we0 = ap_const_logic_1;
    } else {
        lout_25_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_26_address0() {
    lout_26_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_26_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_26_ce0 = ap_const_logic_1;
    } else {
        lout_26_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_26_d0() {
    lout_26_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_26_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_26_we0 = ap_const_logic_1;
    } else {
        lout_26_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_27_address0() {
    lout_27_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_27_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_27_ce0 = ap_const_logic_1;
    } else {
        lout_27_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_27_d0() {
    lout_27_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_27_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_27_we0 = ap_const_logic_1;
    } else {
        lout_27_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_28_address0() {
    lout_28_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_28_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_28_ce0 = ap_const_logic_1;
    } else {
        lout_28_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_28_d0() {
    lout_28_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_28_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_28_we0 = ap_const_logic_1;
    } else {
        lout_28_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_29_address0() {
    lout_29_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_29_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_29_ce0 = ap_const_logic_1;
    } else {
        lout_29_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_29_d0() {
    lout_29_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_29_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_29_we0 = ap_const_logic_1;
    } else {
        lout_29_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_2_address0() {
    lout_2_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_2_ce0 = ap_const_logic_1;
    } else {
        lout_2_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_2_d0() {
    lout_2_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_2_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_2_we0 = ap_const_logic_1;
    } else {
        lout_2_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_30_address0() {
    lout_30_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_30_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_30_ce0 = ap_const_logic_1;
    } else {
        lout_30_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_30_d0() {
    lout_30_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_30_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_30_we0 = ap_const_logic_1;
    } else {
        lout_30_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_31_address0() {
    lout_31_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_31_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_31_ce0 = ap_const_logic_1;
    } else {
        lout_31_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_31_d0() {
    lout_31_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_31_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_31_we0 = ap_const_logic_1;
    } else {
        lout_31_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_3_address0() {
    lout_3_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_3_ce0 = ap_const_logic_1;
    } else {
        lout_3_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_3_d0() {
    lout_3_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_3_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_3_we0 = ap_const_logic_1;
    } else {
        lout_3_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_4_address0() {
    lout_4_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_4_ce0 = ap_const_logic_1;
    } else {
        lout_4_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_4_d0() {
    lout_4_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_4_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_4_we0 = ap_const_logic_1;
    } else {
        lout_4_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_5_address0() {
    lout_5_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_5_ce0 = ap_const_logic_1;
    } else {
        lout_5_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_5_d0() {
    lout_5_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_5_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_5_we0 = ap_const_logic_1;
    } else {
        lout_5_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_6_address0() {
    lout_6_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_6_ce0 = ap_const_logic_1;
    } else {
        lout_6_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_6_d0() {
    lout_6_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_6_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_6_we0 = ap_const_logic_1;
    } else {
        lout_6_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_7_address0() {
    lout_7_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_7_ce0 = ap_const_logic_1;
    } else {
        lout_7_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_7_d0() {
    lout_7_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_7_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_7_we0 = ap_const_logic_1;
    } else {
        lout_7_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_8_address0() {
    lout_8_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_8_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_8_ce0 = ap_const_logic_1;
    } else {
        lout_8_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_8_d0() {
    lout_8_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_8_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_8_we0 = ap_const_logic_1;
    } else {
        lout_8_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_9_address0() {
    lout_9_address0 =  (sc_lv<8>) (j_cast_fu_563_p1.read());
}

void a0_out_initial::thread_lout_9_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lout_9_ce0 = ap_const_logic_1;
    } else {
        lout_9_ce0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_lout_9_d0() {
    lout_9_d0 = ap_const_lv32_0;
}

void a0_out_initial::thread_lout_9_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        lout_9_we0 = ap_const_logic_1;
    } else {
        lout_9_we0 = ap_const_logic_0;
    }
}

void a0_out_initial::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_551_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

